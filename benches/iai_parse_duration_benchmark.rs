// Copyright (c) 2023 Joining7943 <joining@posteo.de>
//
// This software is released under the MIT License.
// https://opensource.org/licenses/MIT

use std::time::Duration;

use fundu::DurationParser;
use iai::black_box;

const LARGE_INPUT: &stre-1022";
const SMALL_INPUT: &str = "1";

fn small_default_time_units() {
    let _ = DurationParser::new().parse(black_box(SMALL_INPUT));
}

fn small_without_time_units() {
    let _ = DurationParser::without_time_units().parse(black_box(SMALL_INPUT));
}

fn large_default_time_units() {
    let _ = DurationParser::new().parse(black_box(LARGE_INPUT));
}

fn large_without_time_units() {
    let _ = DurationParser::without_time_units().parse(black_box(LARGE_INPUT));
}

fn small_reference() {
    let _ = Duration::from_secs_f64(black_box(SMALL_INPUT).parse().unwrap());
}

fn large_reference() {
    let _ = Duration::from_secs_f64(black_box(LARGE_INPUT).parse().unwrap());
}

// fn reference_benchmark(criterion: &mut Criterion) {
//     let inputs = [
//         ("small input", "1"),
//         (
//             "large input",
//             &format!("{}.{}e-1022", "1".repeat(1022), "1".repeat(1022)),
//         ),
//     ];
//     let mut group = criterion.benchmark_group("reference speed");
//     for (parameter, input) in inputs {
//         group.bench_with_input(
//             BenchmarkId::new("reference function", parameter),
//             input,
//             |b, input| b.iter(|| Duration::from_secs_f64(input.parse().unwrap())),
//         );
//     }
//     group.finish();
// }

iai::main!(
    small_default_time_units,
    small_without_time_units,
    small_reference,
    large_default_time_units,
    large_without_time_units,
    large_reference
);
